<% const hero = (gallery && gallery.length ? gallery[0] : (product.image_path || '/placeholder.png')); %>

<% if (typeof user !== 'undefined' && user) { %>
  <div class="auth-banner">
    <span>😊</span>
    <span><strong><%= user.name || user.email %></strong> 님 로그인 중</span>
    <div class="right">
      <a class="btn small ghost" href="/account">마이페이지</a>
      <form style="display:inline" method="POST" action="/logout">
        <button class="btn small ghost" type="submit">로그아웃</button>
      </form>
    </div>
  </div>
<% } %>

<div class="product-grid">
  <div class="media">
    <div class="main-image can-zoom-in" id="img-wrap">
      <img id="main-img" src="<%= hero %>" alt="<%= product.title %>" />
    </div>

    <% if (gallery && gallery.length > 0) { %>
      <div class="thumbs">
        <% gallery.forEach(function(src, idx){ %>
          <img class="thumb <%= idx===0 ? 'active' : '' %>" src="<%= src %>" data-src="<%= src %>" alt="<%= product.title %> 썸네일 <%= idx+1 %>" />
        <% }) %>
      </div>
    <% } %>
  </div>

  <div>
    <h1 style="margin:0 0 10px"><%= product.title %></h1>
    <div class="price-block">
      <div class="price-lg"><%= product.price.toLocaleString() %>원</div>
      <span id="stockPill" class="stock-pill" aria-live="polite">재고 확인 중…</span>
    </div>
    <p style="font-size:14px;color:var(--muted);white-space:pre-wrap"><%= product.description || '' %></p>

    <% if (typeof user !== 'undefined' && user) { %>
      <!-- ✅ 로그인 상태: 주문 폼 표시 -->
      <form class="form" method="POST" action="/checkout" style="margin-top:12px">
        <input type="hidden" name="product_id" value="<%= product.id %>" />
        <input type="hidden" name="variant_id" id="variantId" />

        <% if (variants && variants.length) { %>
          <div style="display:grid;grid-template-columns:1fr 1fr;gap:12px">
            <label>사이즈
              <select id="selSize"></select>
            </label>
            <label>색상
              <select id="selColor"></select>
            </label>
          </div>
        <% } %>

        <label>수량
          <input id="qty" type="number" name="quantity" value="1" min="1" required />
        </label>

        <label>이름
          <input type="text" name="buyer_name" placeholder="구매자 성함"
                 value="<%= (user && user.name) || '' %>" autocomplete="name" />
          <small class="muted">회원 정보로 자동 입력되었습니다. 변경 가능</small>
        </label>

        <label>이메일
          <input type="email" name="buyer_email" placeholder="연락 받을 이메일"
                 value="<%= (user && user.email) || '' %>" readonly autocomplete="email" required />
          <small class="muted">가입 이메일로 주문 알림을 보내드려요</small>
        </label>
        <!-- 배송지 정보 -->
        <div class="notice-card" style="margin-top:12px">
          <div class="title">배송지 정보</div>
          <div style="display:grid;gap:10px">
            <div style="display:grid;grid-template-columns:1fr 1fr;gap:10px">
              <label>받는 분 이름
                <input type="text" name="ship_name"
                      value="<%= (user && user.name) || '' %>"
                      placeholder="수령인 성함" required />
              </label>
              <label>연락처
                <input type="tel" name="ship_phone"
                      placeholder="010-1234-5678" required />
              </label>
            </div>

            <div style="display:grid;grid-template-columns:160px 1fr 120px;gap:10px">
              <label>우편번호
                <input type="text" name="ship_postcode" placeholder="예: 06236" required />
              </label>
              <label>주소
                <input type="text" name="ship_addr1" placeholder="도로명 주소" required />
              </label>
              <div style="align-self:end">
                <!-- 선택: 다음(카카오) 주소검색을 추후 연결 가능 -->
                <button
                  type="button"
                  id="findAddrBtn"
                  class="btn ghost addr-search"
                  aria-controls="postcodeLayer"
                  aria-expanded="false"
                  style="width:100%"
                >
                  <span class="icon" aria-hidden="true">🔎</span>
                  <span class="label">주소검색</span>
                </button>

              </div>
            </div>

            <label>상세주소
              <input type="text" name="ship_addr2" placeholder="동/호수 등(선택)" />
            </label>

            <label>요청사항(선택)
              <input type="text" name="ship_memo" placeholder="부재 시 문 앞에 놓아주세요 등" />
            </label>
          </div>
        </div>


        <button id="buyBtn" class="btn brand" type="submit">주문하기(계좌송금)</button>
      </form>

    <% } else { %>
      <!-- 🚫 비로그인: 주문 불가 안내 + 로그인/회원가입 유도 -->
      <div class="notice-card" style="margin-top:16px">
        <div class="title">로그인 후 주문 가능합니다</div>
        <div style="margin:6px 0 12px;color:var(--muted)">아동복샵은 회원 보호를 위해 주문은 회원만 가능해요.</div>
        <div style="display:flex;gap:8px;flex-wrap:wrap">
          <a class="btn brand" href="/login?next=/product/<%= product.id %>">로그인</a>
          <a class="btn ghost" href="/signup?next=/product/<%= product.id %>">회원가입</a>
        </div>
      </div>
    <% } %>
<!-- 주소검색 레이어 & 딤 (처음엔 숨김) -->
<div id="postcodeDim" style="display:none;position:fixed;inset:0;background:rgba(0,0,0,.45);z-index:1000;"></div>
<div id="postcodeLayer" style="display:none;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);width:min(420px,94vw);height:480px;z-index:1001;background:#fff;border:1px solid var(--border,#e5e7eb);box-shadow:0 10px 30px rgba(0,0,0,.2);border-radius:12px;overflow:hidden;">
  <div style="display:flex;align-items:center;justify-content:space-between;padding:8px 12px;border-bottom:1px solid var(--border,#e5e7eb);">
    <strong>주소 검색</strong>
    <button type="button" id="postcodeClose" class="btn small ghost">닫기</button>
  </div>
  <div id="postcodeWrap" style="width:100%;height:430px;"></div>
</div>

    <div class="notice-card">
      <div class="title">계좌송금 안내</div>
      <div>
        계좌번호: <span class="bank">농협 241097-56-078780 장은애</span>
        <button class="btn ghost" id="copyBtn" type="button">복사</button>
      </div>
      <div style="margin-top:6px;color:var(--muted)">입금 확인 후 발송 일정을 안내드립니다. 평균 1주 소요.</div>
    </div>
  </div>
</div>


<script>
  (function(){
    const container = document.getElementById('img-wrap');
    const main = document.getElementById('main-img');
    const thumbs = document.querySelectorAll('.thumb');

    // 썸네일 클릭: 이미지 교체 + 줌 초기화
    thumbs.forEach(t => t.addEventListener('click', () => {
      const src = t.dataset.src || t.src;
      main.src = src;
      document.querySelectorAll('.thumb.active').forEach(x=>x.classList.remove('active'));
      t.classList.add('active');
      resetZoom();
    }));

    // Zoom/Pan 상태
    let scale = 1, minScale = 1, maxScale = 4;
    let x = 0, y = 0;
    let dragging = false, startX = 0, startY = 0, originX = 0, originY = 0;
    let pinching = false, startDist = 0, startScale = 1;

    function apply(){
      main.style.transform = `translate(${x}px, ${y}px) scale(${scale})`;
      updateCursor();
    }
    function clampPan(){
      const rect = container.getBoundingClientRect();
      const maxX = Math.max(0, (rect.width * scale - rect.width) / 2);
      const maxY = Math.max(0, (rect.height * scale - rect.height) / 2);
      x = Math.min(maxX, Math.max(-maxX, x));
      y = Math.min(maxY, Math.max(-maxY, y));
    }
    function resetZoom(){ scale = 1; x = 0; y = 0; apply(); }
    function updateCursor(){
      container.classList.toggle('can-zoom-in', scale === 1);
      container.classList.toggle('can-zoom-out', scale > 1);
      container.classList.toggle('grabbable', scale > 1);
    }

    // 더블클릭 줌
    container.addEventListener('dblclick', () => {
      if (scale === 1) { scale = 2; } else { resetZoom(); return; }
      clampPan(); apply();
    });

    // 휠 줌
    container.addEventListener('wheel', (e) => {
      e.preventDefault();
      const k = e.deltaY > 0 ? 0.9 : 1.1;
      scale = Math.min(maxScale, Math.max(minScale, scale * k));
      if (scale === 1) { x = 0; y = 0; }
      clampPan(); apply();
    }, { passive: false });

    // 드래그 팬
    container.addEventListener('mousedown', (e) => {
      if (scale === 1) return;
      dragging = true; container.classList.add('grabbing');
      startX = e.clientX; startY = e.clientY; originX = x; originY = y;
    });
    window.addEventListener('mousemove', (e) => {
      if (!dragging) return;
      x = originX + (e.clientX - startX);
      y = originY + (e.clientY - startY);
      clampPan(); apply();
    });
    window.addEventListener('mouseup', () => { dragging = false; container.classList.remove('grabbing'); });

    // 터치: 팬 + 핀치
    container.addEventListener('touchstart', (e) => {
      if (e.touches.length === 1) {
        if (scale === 1) return;
        dragging = true; startX = e.touches[0].clientX; startY = e.touches[0].clientY; originX = x; originY = y;
      } else if (e.touches.length === 2) {
        pinching = true; dragging = false;
        startDist = dist(e.touches[0], e.touches[1]);
        startScale = scale;
      }
    }, { passive: false });
    container.addEventListener('touchmove', (e) => {
      e.preventDefault();
      if (pinching && e.touches.length === 2) {
        const d = dist(e.touches[0], e.touches[1]);
        scale = Math.min(maxScale, Math.max(minScale, startScale * (d / startDist)));
        if (scale === 1) { x = 0; y = 0; }
        clampPan(); apply();
      } else if (dragging && e.touches.length === 1) {
        x = originX + (e.touches[0].clientX - startX);
        y = originY + (e.touches[0].clientY - startY);
        clampPan(); apply();
      }
    }, { passive: false });
    container.addEventListener('touchend', (e) => {
      if (e.touches.length === 0) { dragging = false; pinching = false; container.classList.remove('grabbing'); }
    }, { passive: false });
    function dist(a,b){ const dx=a.clientX-b.clientX, dy=a.clientY-b.clientY; return Math.hypot(dx,dy); }

    // 계좌번호 복사
    const copyBtn = document.getElementById('copyBtn');
    copyBtn?.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText('농협 241097-56-078780 장은애');
        copyBtn.textContent = '복사됨';
        setTimeout(()=> copyBtn.textContent='복사', 1500);
      } catch(e){ alert('복사 실패'); }
    });

    // ✅ 옵션/재고 로직
    const variants = <%- JSON.stringify(variants || []) %>;
    const selSize   = document.getElementById('selSize');
    const selColor  = document.getElementById('selColor');
    const variantId = document.getElementById('variantId');
    const qty       = document.getElementById('qty');
    const buyBtn    = document.getElementById('buyBtn');
    const pill      = document.getElementById('stockPill');

    function unique(arr){ return [...new Set(arr.filter(Boolean))]; }
    const sizes  = unique(variants.map(v=>v.size));
    const colors = unique(variants.map(v=>v.color));

    function fillSelect(sel, items){
      if (!sel) return;
      sel.innerHTML = '';
      const opt0 = document.createElement('option');
      opt0.value = ''; opt0.textContent = '선택하세요'; sel.appendChild(opt0);
      items.forEach(v=>{ const o=document.createElement('option'); o.value=v; o.textContent=v; sel.appendChild(o); });
    }

    function currentVariant(){
      const s = selSize?.value || ''; const c = selColor?.value || '';
      return variants.find(v => (v.size||'')===s && (v.color||'')===c);
    }

    function updateStockView(){
      const setQtyMax = (v)=> { if (qty) qty.max = Math.max(1, v); };
      const setBuyDisabled = (flag)=> { if (buyBtn) buyBtn.disabled = !!flag; };

      if (!variants.length){
        const available = <%= (product.stock||0) %>;
        pill.className = 'stock-pill ' + (available>0?'good':'bad');
        pill.textContent = available>0 ? `재고 ${available}개` : '품절';
        setQtyMax(available);
        setBuyDisabled(available<=0);
        return;
      }
      const v = currentVariant();
      if (!v){
        pill.className = 'stock-pill';
        pill.textContent = '옵션을 선택하세요';
        setQtyMax(1);
        setBuyDisabled(true);
        if (variantId) variantId.value = '';
      } else {
        pill.className = 'stock-pill ' + (v.stock>0?'good':'bad');
        pill.textContent = v.stock>0 ? `재고 ${v.stock}개` : '품절';
        setQtyMax(v.stock||1);
        setBuyDisabled((v.stock||0) <= 0);
        if (variantId) variantId.value = v.id;
      }
    }

    if (variants.length){
      fillSelect(selSize, sizes);
      fillSelect(selColor, colors);
      selSize && selSize.addEventListener('change', updateStockView);
      selColor && selColor.addEventListener('change', updateStockView);
    }
    if (variants.length){
      if (sizes.length === 1 && selSize) selSize.value = sizes[0];
      if (colors.length === 1 && selColor) selColor.value = colors[0];
      updateStockView();
    } else {
      updateStockView();
    }

    const form = document.querySelector('form.form');
    form?.addEventListener('submit', (e) => {
      if (variants.length && !currentVariant()){
        e.preventDefault();
        pill.className = 'stock-pill';
        pill.textContent = '옵션을 선택하세요';
        selSize?.focus();
        return;
      }
      if (buyBtn){
        buyBtn.disabled = true;
        buyBtn.dataset.prev = buyBtn.textContent;
        buyBtn.textContent = '주문 처리 중...';
      }
    });


    // -----------------------------
    // 🏷️ 다음(카카오) 주소검색 연동 (안정화 버전)
    // -----------------------------
    const findBtn   = document.getElementById('findAddrBtn');
    const dim       = document.getElementById('postcodeDim');
    const layer     = document.getElementById('postcodeLayer');
    const wrap      = document.getElementById('postcodeWrap');
    const closeBtn  = document.getElementById('postcodeClose');

    const $postcode = document.querySelector('input[name="ship_postcode"]');
    const $addr1    = document.querySelector('input[name="ship_addr1"]');
    const $addr2    = document.querySelector('input[name="ship_addr2"]');

    function showLayer(){
      if (layer && dim) { layer.style.display='block'; dim.style.display='block'; }
      if (findBtn){ findBtn.classList.add('is-active'); findBtn.setAttribute('aria-expanded','true'); }
    }
    function hideLayer(){
      if (layer && dim) { layer.style.display='none'; dim.style.display='none'; }
      if (findBtn){ findBtn.classList.remove('is-active'); findBtn.setAttribute('aria-expanded','false'); }
    }

    // 외부 스크립트 로더(중복 로딩 방지)
    async function ensureDaumPostcode(){
      if (window.daum?.Postcode) return;
      if (window.__postcodeLoading) return window.__postcodeLoading;
      window.__postcodeLoading = new Promise((resolve, reject) => {
        const s = document.createElement('script');
        s.src = 'https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js';
        s.async = true;
        s.onload = () => resolve();
        s.onerror = () => reject(new Error('postcode script load failed'));
        document.head.appendChild(s);
      });
      return window.__postcodeLoading;
    }

    function openPostcodeEmbed(){
      // 임베드 레이어 방식
      const pc = new daum.Postcode({
        oncomplete: function(data){
          const postcode = data.zonecode;
          const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;
          if ($postcode) $postcode.value = postcode;
          if ($addr1)    $addr1.value    = addr;
          $addr2?.focus();
          hideLayer();
        },
        onresize: function(size){ if (wrap) wrap.style.height = size.height + 'px'; },
        width: '100%', height: '100%'
      });
      pc.embed(wrap, { autoClose: false });
      showLayer();
    }

    function openPostcodePopup(){
      // 팝업(새 창) 대체 수단 — 임베드가 어려운 환경 대비
      new daum.Postcode({
        oncomplete: function(data){
          const postcode = data.zonecode;
          const addr = data.userSelectedType === 'R' ? data.roadAddress : data.jibunAddress;
          if ($postcode) $postcode.value = postcode;
          if ($addr1)    $addr1.value    = addr;
          $addr2?.focus();
        }
      }).open();
    }

    // ✅ 클릭 안정화: 이벤트 위임 + 강제 preventDefault
    document.addEventListener('click', async (e) => {
      const btn = e.target.closest('#findAddrBtn');
      if (!btn) return;

      e.preventDefault();  // 폼 내부 클릭시 우발적 제출/리로딩 방지
      if (btn.disabled) return;

      const prevLabel = btn.querySelector('.label')?.textContent;
      btn.disabled = true;
      btn.classList.add('is-active');
      const labelEl = btn.querySelector('.label');
      if (labelEl) labelEl.textContent = '로딩중...';

      try {
        await ensureDaumPostcode();
        if (wrap && layer && dim) openPostcodeEmbed();
        else openPostcodePopup();
      } catch (err) {
        console.error('[postcode] load error:', err);
        alert('주소검색 로딩에 실패했습니다. 잠시 후 다시 시도해 주세요.');
      } finally {
        btn.disabled = false;
        btn.classList.remove('is-active');
        if (labelEl) labelEl.textContent = prevLabel || '주소검색';
      }
    });

    // 닫기/딤/ESC 핸들러
    closeBtn?.addEventListener('click', hideLayer);
    dim?.addEventListener('click', hideLayer);
    window.addEventListener('keydown', (e)=>{ if (e.key === 'Escape') hideLayer(); });
  })();
</script>
