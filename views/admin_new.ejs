<h2>신규 상품 등록</h2>
<p class="muted" style="margin:-4px 0 16px">
  필수 항목을 먼저 입력하고, 이미지를 올린 뒤 <b>등록</b>을 눌러주세요. 첫 번째 이미지가 자동으로 대표 이미지가 됩니다.
</p>

<form class="form" method="POST" action="/admin/new" enctype="multipart/form-data" id="productForm">
  <!-- 기본 정보 -->
  <div style="display:grid;grid-template-columns:1fr 1fr;gap:12px">
    <label class="field">상품명 <span class="req">*</span>
      <input type="text" name="title" required placeholder="예) 라운지 맨투맨 세트" />
      <small class="hint">상세 옵션(색/사이즈)은 아래에서 입력합니다.</small>
    </label>

    <label class="field">가격(원) <span class="req">*</span>
      <input type="number" name="price" min="0" step="100" required placeholder="예) 12000" id="priceInput"/>
      <small class="hint">숫자만 입력 (예: 12000). <span id="pricePretty" class="muted"></span></small>
    </label>
  </div>

  <label class="field">재고(옵션 미사용 시)
    <input type="number" name="stock" min="0" step="1" value="0" />
    <small class="hint">아래에서 옵션(색/사이즈)을 <b>전혀</b> 입력하지 않으면, 이 수량을 단일 재고로 사용합니다.</small>
  </label>

  <label class="field">상품 설명
    <textarea name="description" rows="5" placeholder="소재 / 핏 / 세탁법 / 모델 정보 등을 적어주세요."></textarea>
  </label>

  <!-- 이미지 업로드 -->
  <div class="field">
    <div style="display:flex;align-items:center;justify-content:space-between">
      <div>상품 이미지 <span class="req">*</span></div>
      <small class="muted" id="imgCount">0/12</small>
    </div>

    <!-- 드롭존 -->
    <div id="dropzone" class="dropzone" tabindex="0" role="button" aria-label="이미지 업로드 영역">
      <div>
        <div style="font-weight:700">이미지를 끌어다 놓거나 클릭해서 선택</div>
        <div class="muted">JPG/PNG, 파일당 최대 10MB, 최대 12장</div>
      </div>
      <input id="imagesInput" type="file" name="images" accept="image/*" multiple required style="display:none" />
    </div>

    <!-- 미리보기 -->
    <div id="preview" class="preview-grid" aria-live="polite"></div>
    <small class="hint">첫 번째 썸네일이 대표 이미지로 사용됩니다. 썸네일을 드래그하여 순서를 바꿀 수 있습니다.</small>
  </div>

  <!-- 옵션 사용 스위치 -->
  <div class="card" style="margin-top:8px">
    <label style="display:flex; align-items:center; gap:10px; cursor:pointer">
      <input type="checkbox" id="useOptions">
      <span><b>옵션(사이즈/색상) 사용</b></span>
    </label>
    <small class="muted">옵션을 한 줄이라도 입력하면 옵션 기반 재고로 취급됩니다. 비워두면 단일 재고로 처리됩니다.</small>
  </div>

  <!-- 옵션 빌더 -->
  <div class="variant-builder" id="variantBox" hidden>
    <div style="display:flex;align-items:center;justify-content:space-between;margin-bottom:8px">
      <div style="font-weight:800">옵션(사이즈/색상)과 재고</div>
      <button type="button" class="btn small ghost" id="addRow">옵션 추가</button>
    </div>

    <div class="variant-table">
      <div class="variant-head">
        <div>사이즈</div><div>색상</div><div>재고</div><div>작업</div>
      </div>
      <div id="variantRows" class="variant-rows">
        <div class="variant-row">
          <input name="opt_size[]"  placeholder="예: 90" />
          <input name="opt_color[]" placeholder="예: 베이지" />
          <input name="opt_stock[]" type="number" min="0" step="1" placeholder="예: 10" />
          <button type="button" class="btn small ghost remove">삭제</button>
        </div>
      </div>
    </div>

    <div style="margin-top:6px">
      <small class="muted">예) 90/베이지/10, 100/베이지/8, 100/블루/5 처럼 여러 줄로 입력.</small>
    </div>
  </div>

  <div style="display:flex; gap:8px; margin-top:16px">
    <button class="btn" type="submit">등록</button>
    <a class="btn ghost" href="/admin">취소</a>
  </div>
</form>

<style>
  .field { display:block; }
  .req { color:var(--brand, #e11d48); font-weight:700; margin-left:4px }
  .hint { color:var(--muted); display:block; margin-top:4px }
  .dropzone {
    border:2px dashed var(--border,#e5e7eb); border-radius:12px; padding:18px;
    display:flex; align-items:center; justify-content:center; text-align:center; min-height:120px; background:var(--panel,#fafafa);
  }
  .dropzone.drag { border-color: #60a5fa; background:#f0f7ff; }
  .preview-grid {
    margin-top:10px; display:grid; grid-template-columns:repeat(auto-fill,minmax(90px,1fr)); gap:8px;
  }
  .preview-item { position:relative; border:1px solid var(--border,#e5e7eb); border-radius:10px; overflow:hidden; background:#fff; }
  .preview-item img { width:100%; height:90px; object-fit:cover; display:block; }
  .preview-badge { position:absolute; top:6px; left:6px; background:#111827; color:#fff; font-size:11px; padding:2px 6px; border-radius:999px }
  .preview-actions { position:absolute; top:6px; right:6px; display:flex; gap:4px }
  .preview-actions button { font-size:11px; padding:2px 6px }
  .card { padding:12px; border:1px solid var(--border,#e5e7eb); border-radius:12px; background:#fff; }
  .variant-builder .variant-table { border:1px solid var(--border,#e5e7eb); border-radius:12px; overflow:hidden; }
  .variant-head, .variant-row { display:grid; grid-template-columns:1fr 1fr 120px 88px; gap:8px; }
  .variant-head { background:#f8fafc; padding:10px; font-weight:700; color:#334155 }
  .variant-row { padding:10px; align-items:center; border-top:1px solid var(--border,#e5e7eb) }
  .variant-rows .variant-row:first-child { border-top:none; }
</style>

<script>
  (function(){
    // -------- 가격 보기 좋게 --------
    const priceInput = document.getElementById('priceInput');
    const pricePretty = document.getElementById('pricePretty');
    function fmtKRW(v){ v = Number(v||0); return v ? v.toLocaleString() + '원' : ''; }
    function updPricePretty(){ pricePretty.textContent = fmtKRW(priceInput.value); }
    priceInput.addEventListener('input', updPricePretty);
    updPricePretty();

    // -------- 이미지 업로드 UX --------
    const input = document.getElementById('imagesInput');
    const dz = document.getElementById('dropzone');
    const preview = document.getElementById('preview');
    const imgCount = document.getElementById('imgCount');
    const MAX_FILES = 12, MAX_SIZE = 10 * 1024 * 1024; // 10MB

    dz.addEventListener('click', () => input.click());
    dz.addEventListener('keydown', (e)=>{ if(e.key==='Enter' || e.key===' ') { e.preventDefault(); input.click(); }});
    ;['dragenter','dragover'].forEach(ev => dz.addEventListener(ev, e => { e.preventDefault(); dz.classList.add('drag'); }));
    ;['dragleave','drop'].forEach(ev => dz.addEventListener(ev, e => { e.preventDefault(); dz.classList.remove('drag'); }));

    dz.addEventListener('drop', (e) => {
      const dropped = [...(e.dataTransfer.files || [])].filter(f => f.type.startsWith('image/'));
      if (!dropped.length) return;
      mergeFiles(dropped);
      renderPreview();
    });

    input.addEventListener('change', renderPreview);

    function mergeFiles(newFiles){
      // 기존 파일 + 신규 파일 → DataTransfer로 재구성
      const cur = input.files ? [...input.files] : [];
      const data = new DataTransfer();
      const all = [...cur, ...newFiles];
      let added = 0;
      for (const f of all) {
        if (!f.type.startsWith('image/')) continue;
        if (f.size > MAX_SIZE) { alert(`"${f.name}"은(는) 10MB를 초과합니다.`); continue; }
        if (data.files.length >= MAX_FILES) break;
        // 중복 방지: 같은 이름/사이즈
        const dup = [...data.files].some(x => x.name===f.name && x.size===f.size);
        if (dup) continue;
        data.items.add(f);
        added++;
      }
      if (added === 0 && data.files.length === cur.length && newFiles.length) {
        // 아무것도 추가 안 됨(용량 초과 등)
      }
      input.files = data.files;
    }

    function renderPreview(){
      preview.innerHTML = '';
      const files = [...(input.files || [])];
      imgCount.textContent = `${files.length}/${MAX_FILES}`;
      files.forEach((f, i) => {
        const url = URL.createObjectURL(f);
        const item = document.createElement('div');
        item.className = 'preview-item';
        item.draggable = true;
        item.innerHTML = `
          <img src="${url}" alt="${f.name}">
          ${i===0?'<span class="preview-badge">대표</span>':''}
          <div class="preview-actions">
            <button type="button" class="btn small ghost up"    title="앞으로">↑</button>
            <button type="button" class="btn small ghost down"  title="뒤로">↓</button>
            <button type="button" class="btn small ghost del"   title="삭제">삭제</button>
          </div>
        `;
        // 버튼 동작
        item.querySelector('.del').addEventListener('click', () => reorderFiles(i, null)); // 삭제
        item.querySelector('.up').addEventListener('click', () => move(i, -1));
        item.querySelector('.down').addEventListener('click', () => move(i, +1));
        preview.appendChild(item);
      });
    }

    function move(index, delta){
      const files = [...input.files];
      const ni = index + delta;
      if (ni < 0 || ni >= files.length) return;
      const tmp = files[index]; files[index] = files[ni]; files[ni] = tmp;
      setFiles(files); renderPreview();
    }

    function reorderFiles(index, toIndex){
      const files = [...input.files];
      if (toIndex === null) { files.splice(index, 1); } // 삭제
      else {
        const f = files.splice(index, 1)[0];
        files.splice(toIndex, 0, f);
      }
      setFiles(files); renderPreview();
    }

    function setFiles(list){
      const data = new DataTransfer();
      list.slice(0, MAX_FILES).forEach(f => data.items.add(f));
      input.files = data.files;
      imgCount.textContent = `${input.files.length}/${MAX_FILES}`;
    }

    // -------- 옵션 빌더 --------
    const useOptions = document.getElementById('useOptions');
    const variantBox = document.getElementById('variantBox');
    const rows = document.getElementById('variantRows');
    const addRowBtn = document.getElementById('addRow');

    useOptions.addEventListener('change', toggleOptions);
    addRowBtn.addEventListener('click', () => addRow());
    rows.addEventListener('click', (e) => {
      if (e.target.classList.contains('remove')) {
        const row = e.target.closest('.variant-row');
        if (rows.children.length > 1) row.remove();
      }
    });

    function toggleOptions(){
      const enabled = useOptions.checked;
      variantBox.hidden = !enabled;
      // 옵션 입력 비활성/활성
      rows.querySelectorAll('input').forEach(inp => inp.disabled = !enabled);
    }
    function addRow(){
      const div = document.createElement('div');
      div.className = 'variant-row';
      div.innerHTML = `
        <input name="opt_size[]"  placeholder="예: 100" />
        <input name="opt_color[]" placeholder="예: 블루" />
        <input name="opt_stock[]" type="number" min="0" step="1" placeholder="예: 8" />
        <button type="button" class="btn small ghost remove">삭제</button>
      `;
      if (!useOptions.checked) toggleOptions(); // 켜진 상태로 전환
      rows.appendChild(div);
    }
    // 초기: 옵션 비활성 상태로 시작
    toggleOptions();

    // -------- 제출 전 검증(가벼운 클라이언트 체크) --------
    document.getElementById('productForm').addEventListener('submit', (e) => {
      if (input.files.length === 0) {
        e.preventDefault();
        alert('이미지를 최소 1장 이상 업로드하세요.');
        return;
      }
      if (useOptions.checked) {
        const anyFilled = [...rows.querySelectorAll('.variant-row')].some(r => {
          const s = r.querySelector('input[name="opt_size[]"]').value.trim();
          const c = r.querySelector('input[name="opt_color[]"]').value.trim();
          const st= r.querySelector('input[name="opt_stock[]"]').value;
          return s || c || (st !== '' && Number(st) >= 0);
        });
        if (!anyFilled) {
          e.preventDefault();
          alert('옵션 사용을 켜셨습니다. 한 줄 이상 입력하거나 옵션 사용을 끄세요.');
          return;
        }
      }
    });
  })();
</script>
